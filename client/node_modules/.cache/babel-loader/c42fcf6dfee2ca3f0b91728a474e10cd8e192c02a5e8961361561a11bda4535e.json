{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n  const [selectedPlan, setSelectedPlan] = useState([]);\n  const [coverageName, setCoverageName] = useState('');\n  const [coverageAmount, setCoverageAmount] = useState('');\n  // const [enrollValues, setEnrollValues] = useState([{insuranceName: \"\", plan : []}])\n\n  function enrollInThis(insuranceName, selectedPlan) {\n    setSelectedInsuranceName(insuranceName);\n    setSelectedPlan(selectedPlan);\n    console.log(\"Inside js plans = \" + selectedPlan.planName);\n    setEnrollValues({\n      insuranceName: selectedInsuranceName,\n      plan: selectedPlan\n    });\n  }\n  Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n    username: state.username,\n    planName: selectedPlan.planName,\n    yearlyCost: selectedPlan.yearlyCost,\n    coverageName: coverageName,\n    coverageAmount: coverageAmount\n  }).then(response => {\n    console.log(\"Display Filtered + \" + response.username);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" List of Insurances \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), console.log(state.username), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Type \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Plan Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Yearly Cost \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Coverage Details \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: state.insuranceList.map((val, key) => {\n              if (Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: val.insuranceName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: val.insuranceType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: val.plans.planName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", val.plans.yearlyCost]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: val.plans.coverages.map((val, key) => {\n                      // setValues(val.coverageName, val.coverageAmount)\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [val.coverageName, \": $\", val.coverageAmount]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 49\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      type: \"button\",\n                      onClick: () => enrollInThis(val.insuranceName, val.plans),\n                      children: \"Enroll\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(TestDisplay, \"DoPdkG3FjITeeAsdibIPM1h2TCQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n <div>\n {\"Type: \"} {val.insuranceType} {\" \"}\n </div> \n <div>\n {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n </div>\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","Container","Row","NavBar","Button","TestDisplay","navigate","state","selectedInsuranceName","setSelectedInsuranceName","selectedPlan","setSelectedPlan","coverageName","setCoverageName","coverageAmount","setCoverageAmount","enrollInThis","insuranceName","console","log","planName","setEnrollValues","plan","post","username","yearlyCost","then","response","insuranceList","map","val","key","Number","plans","budget","age","maxAge","insuranceType","coverages"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row'\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n    const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n    const [selectedPlan, setSelectedPlan] = useState([]);\n    const [coverageName, setCoverageName] = useState('');\n    const [coverageAmount, setCoverageAmount] = useState('');\n    // const [enrollValues, setEnrollValues] = useState([{insuranceName: \"\", plan : []}])\n\n    function enrollInThis(insuranceName, selectedPlan) {\n        setSelectedInsuranceName(insuranceName)\n        setSelectedPlan(selectedPlan)\n        console.log(\"Inside js plans = \" +selectedPlan.planName)\n        setEnrollValues({insuranceName: selectedInsuranceName, plan: selectedPlan})\n    }\n\n    Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n        username: state.username,\n        planName: selectedPlan.planName,\n        yearlyCost: selectedPlan.yearlyCost,\n        coverageName: coverageName,\n        coverageAmount: coverageAmount,\n    }).then((response) => {\n        console.log(\"Display Filtered + \"+response.username)\n    })\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n            <Row>\n            <Container>\n                <h1> List of Insurances </h1>\n                {console.log(state.username)}\n                <br/>\n\n                <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th> Insurance Name </th>\n                        <th> Insurance Type </th>\n                        <th> Plan Name </th>\n                        <th> Yearly Cost </th>\n                        <th> Coverage Details </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    state.insuranceList.map((val,key) => {\n                        if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) { \n                            return (\n                                <tr>\n                                    <td><b>{val.insuranceName}</b></td>\n                                    <td>{val.insuranceType}</td>\n                                    <td>{val.plans.planName}</td>\n                                    <td>{\"$\"}{val.plans.yearlyCost}</td>\n                                \n                                    <td>\n                                    {\n                                        val.plans.coverages.map((val, key) => {\n                                            // setValues(val.coverageName, val.coverageAmount)\n                                            return (\n                                                <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n                                            )\n                                        })\n                                    }\n                                    </td>\n                                    <td>\n                                        <Button variant=\"primary\" type=\"button\" \n                                            onClick={() => enrollInThis(val.insuranceName, val.plans)}>\n                                            Enroll\n                                        </Button>   \n                                    </td>\n                                </tr>          \n                            );\n                        }\n                    })\n                }\n                </tbody>\n                </Table>\n            </Container>\n            </Row>\n        </Container>\n        \n    )\n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n{\"Insurance Name: \"} {val.insuranceName} {\" \"}\n<div>\n{\"Type: \"} {val.insuranceType} {\" \"}\n</div> \n<div>\n{\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n</div>\n</div> */}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}