{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/DummyFiles/TestFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    filteredInsurances\n  } = useLocation();\n  useEffect(() => {\n    Axios.post(\"http://localhost:3001/testFilter\").then(response => {\n      setInsuranceList(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insurance List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Insurance Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Insurance Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Plan Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Yearly Cost \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Coverage Details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), filteredInsurances.insuranceList.map((val, key) => {\n        if (Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: val.insuranceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.insuranceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.plans.planName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.plans.yearlyCost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.plans.coverages.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [val.coverageName, \": $\", val.coverageAmount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" Enroll in this \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TestDisplay, \"zXZ6aWs9OAnT4Pmv/WEvObgk2HI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n                            {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n                            <div>\n                                {\"Type: \"} {val.insuranceType} {\" \"}\n                            </div> \n                            <div>\n                                {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n                            </div>\n                            \n                        </div> */}\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","TestDisplay","navigate","filteredInsurances","post","then","response","setInsuranceList","data","insuranceList","map","val","key","Number","plans","yearlyCost","state","budget","age","maxAge","insuranceName","insuranceType","planName","coverages","coverageName","coverageAmount"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/DummyFiles/TestFilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{filteredInsurances} = useLocation();\n    \n    useEffect(() =>{\n        Axios.post(\"http://localhost:3001/testFilter\").then((response)=> {\n            setInsuranceList(response.data)\n          })\n        },[])\n\n\n    return (\n        <>\n        <h1>Insurance List </h1>\n        <table border=\"1\" >\n            <tr>\n                <th>Insurance Name</th>\n                <th>Insurance Type</th>\n                <th> Plan Name </th>\n                <th> Yearly Cost </th>\n                <th> Coverage Details </th>\n            </tr>\n            { \n            filteredInsurances.insuranceList.map((val,key) => {\n            if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n                \n                return (\n                    <tr>\n                        <td><b>{val.insuranceName}</b></td>\n                        <td>{val.insuranceType}</td>\n                        <td>{val.plans.planName}</td>\n                        <td>{val.plans.yearlyCost}</td>\n\n                        <td>\n                        {val.plans.coverages.map((val, key) => {\n                            return (\n                                <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n                            )\n                        })}\n                        </td>\n                        <td> Enroll in this </td>\n                        {/* <td>{JSON.stringify(val.plans.coverages)}</td> */}\n                        </tr>          \n                );\n            }\n            })\n        }\n        </table>\n        </>  \n    )\n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n                            {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n                            <div>\n                                {\"Type: \"} {val.insuranceType} {\" \"}\n                            </div> \n                            <div>\n                                {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n                            </div>\n                            \n                        </div> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,kBAAkB;AAAC;AAAA;AAE1D,SAASC,WAAW,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAK;IAACI;EAAkB,CAAC,GAAGH,WAAW,EAAE;EAEzCH,SAAS,CAAC,MAAK;IACXC,KAAK,CAACM,IAAI,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAI;MAC7DC,gBAAgB,CAACD,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAGT,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB;MAAO,MAAM,EAAC,GAAG;MAAA,wBACb;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,eACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,eACvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B,EAELL,kBAAkB,CAACM,aAAa,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;QAClD,IAAGC,MAAM,CAACF,GAAG,CAACG,KAAK,CAACC,UAAU,CAAC,IAAIC,KAAK,CAACC,MAAM,IAAIJ,MAAM,CAACF,GAAG,CAACG,KAAK,CAACI,GAAG,CAAC,IAAIF,KAAK,CAACG,MAAM,EAAE;UAEtF,oBACI;YAAA,wBACI;cAAA,uBAAI;gBAAA,UAAIR,GAAG,CAACS;cAAa;gBAAA;gBAAA;gBAAA;cAAA;YAAK;cAAA;cAAA;cAAA;YAAA,QAAK,eACnC;cAAA,UAAKT,GAAG,CAACU;YAAa;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5B;cAAA,UAAKV,GAAG,CAACG,KAAK,CAACQ;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAM,eAC7B;cAAA,UAAKX,GAAG,CAACG,KAAK,CAACC;YAAU;cAAA;cAAA;cAAA;YAAA,QAAM,eAE/B;cAAA,UACCJ,GAAG,CAACG,KAAK,CAACS,SAAS,CAACb,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;gBACnC,oBACI;kBAAA,WAAMD,GAAG,CAACa,YAAY,EAAE,KAAK,EAAEb,GAAG,CAACc,cAAc;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAO;cAEhE,CAAC;YAAC;cAAA;cAAA;cAAA;YAAA,QACG,eACL;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAyB;UAAA;YAAA;YAAA;YAAA;UAAA,QAEpB;QAEjB;MACA,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE;EAAA,gBACL;AAEX;AAAC,GAlDQxB,WAAW;EAAA,QACCF,WAAW,EACAC,WAAW;AAAA;AAAA,KAFlCC,WAAW;AAoDpB,eAAeA,WAAW;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}