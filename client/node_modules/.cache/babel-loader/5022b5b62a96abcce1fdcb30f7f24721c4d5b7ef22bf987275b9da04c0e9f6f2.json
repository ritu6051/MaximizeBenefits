{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(TestDisplay, \"cBWC9XrlDpYU8kLVCVQV7GLNpRY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n <div>\n {\"Type: \"} {val.insuranceType} {\" \"}\n </div> \n <div>\n {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n </div>\n </div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n\n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","Container","TestDisplay","navigate","state"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n            {/* <ROW>\n            <Container>\n                <h1> List of Insurances </h1>\n                <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th> Insurance Name </th>\n                        <th> Insurance Type </th>\n                        <th> Plan Name </th>\n                        <th> Yearly Cost </th>\n                        <th> Coverage Details </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    state.insuranceList.map((val,key) => {\n                        if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) { \n                            return (\n                                <tr>\n                                <td><b>{val.insuranceName}</b></td>\n                                <td>{val.insuranceType}</td>\n                                <td>{val.plans.planName}</td>\n                                <td>{val.plans.yearlyCost}</td>\n                            \n                                <td>\n                                {\n                                    val.plans.coverages.map((val, key) => {\n                                        return (\n                                            <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n                                        )\n                                    })\n                                }\n                                </td>\n                                <td> Enroll in this</td>\n                                </tr>          \n                            );\n                        }\n                    })\n                }\n                </tbody>\n                </Table>\n            </Container>\n            </ROW> */}\n        </Container>\n    )\n    \n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n{\"Insurance Name: \"} {val.insuranceName} {\" \"}\n<div>\n{\"Type: \"} {val.insuranceType} {\" \"}\n</div> \n<div>\n{\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n</div>\n</div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n                \n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,kBAAkB;AACzD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,SAAS,MAAM,+BAA+B;AAAC;AAEtD,SAASC,WAAW,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAK;IAACM;EAAK,CAAC,GAAGL,WAAW,EAAE;EAE5B,oBACI,QAAC,SAAS;IAAA,wBACN,QAAC,GAAG;MAAA,uBACA,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QA4CG;AAGpB;AAAC,GAxDQG,WAAW;EAAA,QACCJ,WAAW,EACbC,WAAW;AAAA;AAAA,KAFrBG,WAAW;AA0DpB,eAAeA,WAAW;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}