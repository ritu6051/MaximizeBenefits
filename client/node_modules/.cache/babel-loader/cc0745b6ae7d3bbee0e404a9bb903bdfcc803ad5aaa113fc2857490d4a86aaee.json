{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ROW, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" List of Insurances \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Insurance Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Insurance Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Plan Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Yearly Cost \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Coverage Details \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: state.insuranceList.map((val, key) => {\n            if (Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: val.insuranceName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.insuranceType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.plans.planName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.plans.yearlyCost\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.plans.coverages.map((val, key) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [val.coverageName, \": $\", val.coverageAmount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 45\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \" Enroll in this\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), \">\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(TestDisplay, \"cBWC9XrlDpYU8kLVCVQV7GLNpRY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n <div>\n {\"Type: \"} {val.insuranceType} {\" \"}\n </div> \n <div>\n {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n </div>\n </div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n\n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","Container","TestDisplay","navigate","state","insuranceList","map","val","key","Number","plans","yearlyCost","budget","age","maxAge","insuranceName","insuranceType","planName","coverages","coverageName","coverageAmount"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n            <ROW>\n                <h1> List of Insurances </h1>\n                <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th> Insurance Name </th>\n                        <th> Insurance Type </th>\n                        <th> Plan Name </th>\n                        <th> Yearly Cost </th>\n                        <th> Coverage Details </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    state.insuranceList.map((val,key) => {\n                        if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) { \n                            return (\n                                <tr>\n                                <td><b>{val.insuranceName}</b></td>\n                                <td>{val.insuranceType}</td>\n                                <td>{val.plans.planName}</td>\n                                <td>{val.plans.yearlyCost}</td>\n                            \n                                <td>\n                                {\n                                    val.plans.coverages.map((val, key) => {\n                                        return (\n                                            <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n                                        )\n                                    })\n                                }\n                                </td>\n                            <td> Enroll in this</td>\n                        </tr>          \n                    );\n                }\n            })\n        }\n        </tbody>\n        </Table>\n        </ROW>>\n        </Container>\n    )\n    \n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n{\"Insurance Name: \"} {val.insuranceName} {\" \"}\n<div>\n{\"Type: \"} {val.insuranceType} {\" \"}\n</div> \n<div>\n{\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n</div>\n</div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n                \n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}