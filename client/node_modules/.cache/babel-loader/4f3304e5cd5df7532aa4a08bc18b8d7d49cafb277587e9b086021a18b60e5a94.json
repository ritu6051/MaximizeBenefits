{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplayFilteredInsurances() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n  const [selectedPlanName, setSelectedPlanName] = useState('');\n  const [selectedYearlyCost, setSelectedYearlyCost] = useState('');\n  const [selectedCoverages, setSelectedCoverages] = useState([]);\n  function enrollInThis(selectedInsuranceName, selectedInsuranceType, selectedPlanName, selectedYearlyCost, selectedCoverages) {\n    const plans = [{\n      insuranceName: selectedInsuranceName,\n      insuranceType: selectedInsuranceType,\n      planName: selectedPlanName,\n      yearlyCost: selectedYearlyCost,\n      coverages: selectedCoverages\n    }];\n    Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n      username: state.username,\n      plans: plans\n    }).then(response => {});\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" List of Insurances \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", state.username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Type \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Plan Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Yearly Cost \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Coverage Details \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Enroll In This \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [state.insuranceList.map((val1, key) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: val1.plans.map((val2, key) => {\n                  console.log(\"Here\" + val2.yearlyCost);\n                  if (Number(val2.yearlyCost) <= state.budget && Number(val2.age) <= state.maxAge) {\n                    console.log(\"Insurance Name = \" + val1.insuranceName);\n                    console.log(\"Insurance Type = \" + val1.insuranceType);\n                    console.log(\"Plan Name = \" + val2.planName);\n                    console.log(\"Yearly Cost = \" + val2.yearlyCost);\n                    console.log(\"Coverage Name = \" + val2.coverages[0].coverageName);\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: val1.insuranceName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 68,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val1.insuranceType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val2.planName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"$\", val2.yearlyCost]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val2.coverages.map((val3, key) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [val3.coverageName, \": $\", val3.coverageAmount]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 77,\n                            columnNumber: 61\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"button\",\n                          onClick: () => enrollInThis(val1.insuranceName, val1.insuranceType, val2.planName, val2.yearlyCost, val2.coverages),\n                          children: \"Enroll\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 45\n                    }, this);\n                  }\n                })\n              }, void 0, false);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \" Here \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(DisplayFilteredInsurances, \"w3TkT15kMfRqaIAikX8gP5MGv9Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DisplayFilteredInsurances;\nexport default DisplayFilteredInsurances;\nvar _c;\n$RefreshReg$(_c, \"DisplayFilteredInsurances\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","Container","Row","NavBar","Button","DisplayFilteredInsurances","navigate","state","selectedInsuranceName","setSelectedInsuranceName","selectedPlanName","setSelectedPlanName","selectedYearlyCost","setSelectedYearlyCost","selectedCoverages","setSelectedCoverages","enrollInThis","selectedInsuranceType","plans","insuranceName","insuranceType","planName","yearlyCost","coverages","post","username","then","response","insuranceList","map","val1","key","val2","console","log","Number","budget","age","maxAge","coverageName","val3","coverageAmount"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row'\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\n\nfunction DisplayFilteredInsurances() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n    const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n    const [selectedPlanName, setSelectedPlanName] = useState('');\n    const [selectedYearlyCost, setSelectedYearlyCost] = useState('');\n    const [selectedCoverages, setSelectedCoverages] = useState([]);\n    \n    function enrollInThis(selectedInsuranceName, selectedInsuranceType, selectedPlanName, selectedYearlyCost, selectedCoverages) {\n        const plans = [{insuranceName: selectedInsuranceName, insuranceType: selectedInsuranceType, planName: selectedPlanName, yearlyCost: selectedYearlyCost, coverages: selectedCoverages}]\n\n        Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n            username: state.username,\n            plans: plans\n        }).then((response) => {\n        \n        })\n    }\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n            <Row>\n            <Container>\n                <h1> List of Insurances </h1>\n                <h2> {state.username} </h2>\n                <br/>\n\n                <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th> Insurance Name </th>\n                        <th> Insurance Type </th>\n                        <th> Plan Name </th>\n                        <th> Yearly Cost </th>\n                        <th> Coverage Details </th>\n                        <th> Enroll In This </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    state.insuranceList.map((val1,key) => {\n                        return (\n                            <>\n                            {\n                                val1.plans.map((val2, key) => {\n                                    console.log(\"Here\" + val2.yearlyCost)\n                                    if(Number(val2.yearlyCost) <= state.budget && Number(val2.age) <= state.maxAge) { \n                                        console.log(\"Insurance Name = \" +val1.insuranceName)\n                                        console.log(\"Insurance Type = \" +val1.insuranceType)\n                                        console.log(\"Plan Name = \" +val2.planName)\n                                        console.log(\"Yearly Cost = \" +val2.yearlyCost)\n                                        console.log(\"Coverage Name = \" +val2.coverages[0].coverageName)\n                                        return (\n                                            <tr>\n                                                <td><b>{val1.insuranceName}</b></td>\n                                                <td>{val1.insuranceType}</td>\n                                                <td>{val2.planName}</td>\n                                                <td>{\"$\"}{val2.yearlyCost}</td>\n                                            \n                                                <td>\n                                                {\n                                                    val2.coverages.map((val3, key) => {\n                                                        return (\n                                                            <div>{val3.coverageName}{\": $\"}{val3.coverageAmount}</div>\n                                                        )\n                                                    })\n                                                }\n                                                </td>\n                                                <td>\n                                                    <Button variant=\"primary\" type=\"button\" \n                                                        onClick={() => enrollInThis(val1.insuranceName, val1.insuranceType, val2.planName, val2.yearlyCost, val2.coverages)}>\n                                                        Enroll\n                                                    </Button>   \n                                                </td>\n                                            </tr>          \n                                        );\n                                    }\n                                })\n                            }\n                            </>\n                        );\n                    })\n                }\n                <tr>\n                    <td> Here </td>\n                </tr>\n                </tbody>\n                </Table>\n            </Container>\n            </Row>\n        </Container>\n        \n    )\n}\n\nexport default DisplayFilteredInsurances;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}