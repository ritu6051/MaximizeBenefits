{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n  const [selectedPlan, setSelectedPlan] = useState([]);\n  const [coverageName, setCoverageName] = useState('');\n  const [coverageAmount, setCoverageAmount] = useState('');\n  // const [enrollValues, setEnrollValues] = useState([{insuranceName: \"\", plan : []}])\n\n  function enrollInThis(insuranceName, selectedPlan) {\n    setSelectedInsuranceName(insuranceName);\n    setSelectedPlan(selectedPlan);\n    console.log(\"Selected Coverage Name = \" + selectedPlan.coverageName);\n    setEnrollValues({\n      insuranceName: selectedInsuranceName,\n      plan: selectedPlan\n    });\n  }\n  Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n    username: state.username,\n    insuranceName: selectedInsuranceName,\n    planName: selectedPlan.planName,\n    yearlyCost: selectedPlan.yearlyCost\n  }).then(response => {\n    console.log(\"\");\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" List of Insurances \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), console.log(\"here\" + state.insuranceList[0].plans[0].yearlyCost), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Insurance Type \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Plan Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Yearly Cost \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Coverage Details \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Enroll In This \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: state.insuranceList.map((val1, key) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: val1.plans.map((val2, key) => {\n                  if (Number(val2.yearlyCost) <= state.budget && Number(val2.age) <= state.maxAge) {\n                    // console.log(\"Insurance Name = \" +val1.insuranceName)\n                    // console.log(\"Insurance Type = \" +val1.insuranceType)\n                    // console.log(\"Plan Name = \" +val2.planName)\n                    // console.log(\"Yearly Cost = \" +val2.yearlyCost)\n                    // console.log(\"Coverage Name = \" +val2.coverages[0].coverageName)\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: val1.insuranceName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 73,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val1.insuranceType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val2.planName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"$\", val2.yearlyCost]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: val2.coverages.map((val3, key) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [val3.coverageName, \": $\", val3.coverageAmount]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 82,\n                            columnNumber: 61\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"button\",\n                          onClick: () => enrollInThis(val1.insuranceName, val2),\n                          children: \"Enroll\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 88,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 45\n                    }, this);\n                  }\n                })\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(TestDisplay, \"DoPdkG3FjITeeAsdibIPM1h2TCQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n <div>\n {\"Type: \"} {val.insuranceType} {\" \"}\n </div> \n <div>\n {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n </div>\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","Container","Row","NavBar","Button","TestDisplay","navigate","state","selectedInsuranceName","setSelectedInsuranceName","selectedPlan","setSelectedPlan","coverageName","setCoverageName","coverageAmount","setCoverageAmount","enrollInThis","insuranceName","console","log","setEnrollValues","plan","post","username","planName","yearlyCost","then","response","insuranceList","plans","map","val1","key","val2","Number","budget","age","maxAge","insuranceType","coverages","val3"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row'\nimport NavBar from '../Common/NavBar';\nimport Button from 'react-bootstrap/Button';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n    const [selectedInsuranceName, setSelectedInsuranceName] = useState('');\n    const [selectedPlan, setSelectedPlan] = useState([]);\n    const [coverageName, setCoverageName] = useState('');\n    const [coverageAmount, setCoverageAmount] = useState('');\n    // const [enrollValues, setEnrollValues] = useState([{insuranceName: \"\", plan : []}])\n\n    function enrollInThis(insuranceName, selectedPlan) {\n        setSelectedInsuranceName(insuranceName)\n        setSelectedPlan(selectedPlan)\n        console.log(\"Selected Coverage Name = \" +selectedPlan.coverageName)\n        setEnrollValues({insuranceName: selectedInsuranceName, plan: selectedPlan})\n    }\n\n    Axios.post(\"http://localhost:3001/addInsuranceToUser\", {\n        username: state.username,\n        insuranceName: selectedInsuranceName,\n        planName: selectedPlan.planName,\n        yearlyCost: selectedPlan.yearlyCost,\n    }).then((response) => {\n        console.log(\"\")\n    })\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n            <Row>\n            <Container>\n                <h1> List of Insurances </h1>\n                {console.log(\"here\" +state.insuranceList[0].plans[0].yearlyCost)}\n                <br/>\n\n                <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th> Insurance Name </th>\n                        <th> Insurance Type </th>\n                        <th> Plan Name </th>\n                        <th> Yearly Cost </th>\n                        <th> Coverage Details </th>\n                        <th> Enroll In This </th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    state.insuranceList.map((val1,key) => {\n                        return (\n                            <>\n                            {\n                                val1.plans.map((val2, key) => {\n                                    if(Number(val2.yearlyCost) <= state.budget && Number(val2.age) <= state.maxAge) { \n                                        // console.log(\"Insurance Name = \" +val1.insuranceName)\n                                        // console.log(\"Insurance Type = \" +val1.insuranceType)\n                                        // console.log(\"Plan Name = \" +val2.planName)\n                                        // console.log(\"Yearly Cost = \" +val2.yearlyCost)\n                                        // console.log(\"Coverage Name = \" +val2.coverages[0].coverageName)\n                                        return (\n                                            <tr>\n                                                <td><b>{val1.insuranceName}</b></td>\n                                                <td>{val1.insuranceType}</td>\n                                                <td>{val2.planName}</td>\n                                                <td>{\"$\"}{val2.yearlyCost}</td>\n                                            \n                                                <td>\n                                                {\n                                                    val2.coverages.map((val3, key) => {\n                                                        return (\n                                                            <div>{val3.coverageName}{\": $\"}{val3.coverageAmount}</div>\n                                                        )\n                                                    })\n                                                }\n                                                </td>\n                                                <td>\n                                                    <Button variant=\"primary\" type=\"button\" \n                                                        onClick={() => enrollInThis(val1.insuranceName, val2)}>\n                                                        Enroll\n                                                    </Button>   \n                                                </td>\n                                            </tr>          \n                                        );\n                                    }\n                                })\n                            }\n                            </>\n                        );\n                    })\n                }\n                </tbody>\n                </Table>\n            </Container>\n            </Row>\n        </Container>\n        \n    )\n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n{\"Insurance Name: \"} {val.insuranceName} {\" \"}\n<div>\n{\"Type: \"} {val.insuranceType} {\" \"}\n</div> \n<div>\n{\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n</div>\n</div> */}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}