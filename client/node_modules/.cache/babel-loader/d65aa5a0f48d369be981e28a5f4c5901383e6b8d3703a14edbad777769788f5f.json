{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TestDisplay() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" List of insurances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Insurance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Insurance Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Plan Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Yearly Cost \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Coverage Details \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.insuranceList.map((val, key) => {\n          if (Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: val.insuranceName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.insuranceType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.plans.planName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.plans.yearlyCost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.plans.coverages.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [val.coverageName, \": $\", val.coverageAmount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 41\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \" Enroll in this\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TestDisplay, \"cBWC9XrlDpYU8kLVCVQV7GLNpRY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TestDisplay;\nexport default TestDisplay;\n{/* <div key = {key}>\n {\"Insurance Name: \"} {val.insuranceName} {\" \"}\n <div>\n {\"Type: \"} {val.insuranceType} {\" \"}\n </div> \n <div>\n {\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n </div>\n </div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n\n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )\nvar _c;\n$RefreshReg$(_c, \"TestDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Table","TestDisplay","navigate","state","insuranceList","map","val","key","Number","plans","yearlyCost","budget","age","maxAge","insuranceName","insuranceType","planName","coverages","coverageName","coverageAmount"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Customer/DisplayFilteredInsurances.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\n\nfunction TestDisplay() {\n    const navigate = useNavigate();\n    const{state} = useLocation();\n\n    return (\n        <>\n        <h1> List of insurances</h1>\n        <Table striped bordered hover>\n        <thead>\n            <tr>\n                <th>Insurance Name</th>\n                <th>Insurance Type</th>\n                <th> Plan Name </th>\n                <th> Yearly Cost </th>\n                <th> Coverage Details </th>\n            </tr>\n        </thead>\n        <tbody>\n        {\n            state.insuranceList.map((val,key) => {\n                if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) { \n                    return (\n                        <tr>\n                            <td><b>{val.insuranceName}</b></td>\n                            <td>{val.insuranceType}</td>\n                            <td>{val.plans.planName}</td>\n                            <td>{val.plans.yearlyCost}</td>\n                        \n                            <td>\n                            {\n                                val.plans.coverages.map((val, key) => {\n                                    return (\n                                        <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n                                    )\n                                })}\n                            </td>\n                            <td> Enroll in this</td>\n                        </tr>          \n                    );\n                }\n            })\n        }\n        </tbody>\n        </Table>\n        </>\n    )\n    \n}\n\nexport default TestDisplay;\n{/* <div key = {key}>\n{\"Insurance Name: \"} {val.insuranceName} {\" \"}\n<div>\n{\"Type: \"} {val.insuranceType} {\" \"}\n</div> \n<div>\n{\"Yearly Cost: \"} {val.plans.yearlyCost} {\" \"}\n</div>\n</div> */}\n\n// return (\n//         <>\n//         <h1>Insurance List </h1>\n//         <table border=\"1\" >\n//             <tr>\n//                 <th>Insurance Name</th>\n//                 <th>Insurance Type</th>\n//                 <th> Plan Name </th>\n//                 <th> Yearly Cost </th>\n//                 <th> Coverage Details </th>\n//             </tr>\n//             { \n//             state.insuranceList.map((val,key) => {\n//             if(Number(val.plans.yearlyCost) <= state.budget && Number(val.plans.age) <= state.maxAge) {   \n                \n//                 return (\n//                     <tr>\n//                         <td><b>{val.insuranceName}</b></td>\n//                         <td>{val.insuranceType}</td>\n//                         <td>{val.plans.planName}</td>\n//                         <td>{val.plans.yearlyCost}</td>\n\n//                         <td>\n//                         {val.plans.coverages.map((val, key) => {\n//                             return (\n//                                 <div>{val.coverageName}{\": $\"}{val.coverageAmount}</div>\n//                             )\n//                         })}\n//                         </td>\n//                         <td> Enroll in this</td>\n//                     </tr>          \n//                 );\n//             }\n//             })\n//         }\n//         </table>\n//         </>  \n//     )"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,kBAAkB;AACzD,OAAOC,KAAK,MAAM,uBAAuB;AAAC;AAAA;AAE1C,SAASC,WAAW,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAK;IAACK;EAAK,CAAC,GAAGJ,WAAW,EAAE;EAE5B,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC5B,QAAC,KAAK;MAAC,OAAO;MAAC,QAAQ;MAAC,KAAK;MAAA,wBAC7B;QAAA,uBACI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,eACpB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB,eACtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA2B;QAAA;UAAA;UAAA;UAAA;QAAA;MAC1B;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UAEII,KAAK,CAACC,aAAa,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;UACjC,IAAGC,MAAM,CAACF,GAAG,CAACG,KAAK,CAACC,UAAU,CAAC,IAAIP,KAAK,CAACQ,MAAM,IAAIH,MAAM,CAACF,GAAG,CAACG,KAAK,CAACG,GAAG,CAAC,IAAIT,KAAK,CAACU,MAAM,EAAE;YACtF,oBACI;cAAA,wBACI;gBAAA,uBAAI;kBAAA,UAAIP,GAAG,CAACQ;gBAAa;kBAAA;kBAAA;kBAAA;gBAAA;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACnC;gBAAA,UAAKR,GAAG,CAACS;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAC5B;gBAAA,UAAKT,GAAG,CAACG,KAAK,CAACO;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAC7B;gBAAA,UAAKV,GAAG,CAACG,KAAK,CAACC;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAE/B;gBAAA,UAEIJ,GAAG,CAACG,KAAK,CAACQ,SAAS,CAACZ,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;kBAClC,oBACI;oBAAA,WAAMD,GAAG,CAACY,YAAY,EAAE,KAAK,EAAEZ,GAAG,CAACa,cAAc;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAO;gBAEhE,CAAC;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QACD,eACL;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAwB;YAAA;cAAA;cAAA;cAAA;YAAA,QACvB;UAEb;QACJ,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACL;AAGX;AAAC,GA/CQlB,WAAW;EAAA,QACCH,WAAW,EACbC,WAAW;AAAA;AAAA,KAFrBE,WAAW;AAiDpB,eAAeA,WAAW;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}