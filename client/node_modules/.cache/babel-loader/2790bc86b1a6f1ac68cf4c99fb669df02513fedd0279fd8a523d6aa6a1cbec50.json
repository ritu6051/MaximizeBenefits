{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Company/AddBenefits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport NavBar from '../Common/NavBar';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddBenefits() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [insuranceType, setInsuranceType] = useState('');\n  const [insuranceName, setInsuranceName] = useState('');\n  const [planName, setPlanName] = useState('');\n  const [yearlyCost, setYearlyCost] = useState('');\n  const [maxAge, setMaxAge] = useState('');\n  const [formValues, setFormValues] = useState([{\n    coverageName: \"\",\n    coverageAmount: \"\"\n  }]);\n  const [popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n  const {\n    state\n  } = useLocation();\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    Axios.post(\"http://localhost:3001/insertInsurancePlan\", {\n      insuranceName: insuranceName,\n      insuranceType: insuranceType,\n      planName: planName,\n      yearlyCost: yearlyCost,\n      maxAge: maxAge,\n      coverageDetails: formValues\n    }).then(function (response) {\n      console.log(\"Redirect msg inside AddInsurance.js = \" + response.data.redirect);\n      if (response.data.redirect === 'insurance_already_exists') {\n        setPopUp1(true);\n        // navigate(\"/Register\")\n      } else if (response.data.redirect === 'new_insurance_added_successfully') {\n        console.log(\"new_insurance_added_successfully\");\n        // navigate(\"/FrontPage_Company\")\n      }\n    });\n  };\n\n  const handleInsuranceType = event => {\n    console.log(event.target.value);\n    setInsuranceType(event.target.value);\n  };\n  const handleChange = (i, e) => {\n    console.log(\"e = \" + e.target.name);\n    const newFormValues = [...formValues];\n    // newFormValues[i][e.target.name] = e.target.value;\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n    console.log(newFormValues);\n  };\n  const addFormFields = () => {\n    setFormValues([...formValues, {\n      coverageName: \"\",\n      coverageAmount: \"\"\n    }]);\n  };\n  const removeFormFields = i => {\n    const newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n  const logout = () => {\n    setUsername(\"\");\n    setPassword(\"\");\n    navigate(\"/Login\");\n  };\n  // ----------- End of functions -----------\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" state.username \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mainTitle\",\n          children: \" Insurance Benefits \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formInsuranceName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \" Insurance Type \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: insuranceType,\n                onChange: handleInsuranceType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \" Select Insurance Type \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Health\",\n                  selected: true,\n                  children: \" Health \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Home\",\n                  children: \" Home \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Auto\",\n                  children: \" Auto \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formInsuranceName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Insurance Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Insurance Name\",\n                onChange: event => {\n                  setInsuranceName(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formPlanName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Plan Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Plan Name\",\n                onChange: event => {\n                  setPlanName(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formYearlyCost\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Yearly Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Yearly Cost\",\n                onChange: event => {\n                  setYearlyCost(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formMaxAge\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Max Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Max Age\",\n                onChange: event => {\n                  setMaxAge(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), formValues.map((element, index) =>\n      /*#__PURE__*/\n      // return (\n      _jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"coverageName\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"coverageName\",\n              placeholder: \"Coverage Name\",\n              defaultValue: element.coverageName || \"\",\n              onChange: e => handleChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"coverageAmount\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              name: \"coverageAmount\",\n              placeholder: \"Coverage Amount\",\n              defaultValue: element.coverageAmount || \"\",\n              onChange: e => handleChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: index ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"button\",\n            onClick: () => removeFormFields(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 37\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }, this)\n      // );\n      ), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"button\",\n            onClick: () => addFormFields(),\n            children: \"Add More Coverages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \" Add Plan \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(AddBenefits, \"9BRA13U2AEYv9doH4J3z3FW4pXQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddBenefits;\nexport default AddBenefits;\nvar _c;\n$RefreshReg$(_c, \"AddBenefits\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","useLocation","Container","Row","Col","Button","Form","NavBar","Alert","AddBenefits","navigate","username","setUsername","password","setPassword","insuranceType","setInsuranceType","insuranceName","setInsuranceName","planName","setPlanName","yearlyCost","setYearlyCost","maxAge","setMaxAge","formValues","setFormValues","coverageName","coverageAmount","popUp1","setPopUp1","state","handleFormSubmit","event","preventDefault","post","coverageDetails","then","response","console","log","data","redirect","handleInsuranceType","target","value","handleChange","i","e","name","newFormValues","addFormFields","removeFormFields","splice","logout","map","element","index"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Company/AddBenefits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row'\nimport Col from 'react-bootstrap/esm/Col'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport NavBar from '../Common/NavBar';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction AddBenefits() {\n    const navigate = useNavigate();\n\n    const[username, setUsername] = useState('');\n    const[password, setPassword] = useState('');\n    const[insuranceType, setInsuranceType] = useState('');\n    const[insuranceName, setInsuranceName] = useState('');\n    const[planName, setPlanName] = useState('');\n    const[yearlyCost, setYearlyCost] = useState('');\n    const[maxAge, setMaxAge] = useState('');\n    const [formValues, setFormValues] = useState([{coverageName: \"\", coverageAmount : \"\"}])\n    const[popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n    const{state} = useLocation();\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        Axios.post(\"http://localhost:3001/insertInsurancePlan\", {  \n            insuranceName: insuranceName,\n            insuranceType: insuranceType,\n            planName: planName,\n            yearlyCost: yearlyCost,\n            maxAge: maxAge,\n            coverageDetails: formValues,\n        })\n        .then(function(response) {\n            console.log(\"Redirect msg inside AddInsurance.js = \" +response.data.redirect)\n            if (response.data.redirect === 'insurance_already_exists') {\n                setPopUp1(true)\n                // navigate(\"/Register\")\n            } else if (response.data.redirect === 'new_insurance_added_successfully') {\n                console.log(\"new_insurance_added_successfully\")\n                // navigate(\"/FrontPage_Company\")\n            }\n        })\n    }\n\n    const handleInsuranceType = event =>{\n        console.log(event.target.value);\n        setInsuranceType(event.target.value);\n    }\n\n    const handleChange = (i, e) => {\n        console.log(\"e = \" +e.target.name)\n        const newFormValues = [...formValues];\n        // newFormValues[i][e.target.name] = e.target.value;\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n        console.log(newFormValues)\n        \n    }\n\n    const addFormFields = () => {\n        setFormValues([...formValues, { coverageName: \"\", coverageAmount: \"\" }])\n    }\n\n    const removeFormFields = (i) => {\n        const newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n\n    const logout = () => {\n        setUsername(\"\")\n        setPassword(\"\")\n        navigate(\"/Login\")\n    }\n    // ----------- End of functions -----------\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n            <br/>\n\n            <div> state.username </div>\n\n            <Form onSubmit={handleFormSubmit}>\n                <div className=\"whiteBox\"> \n                    <h2 className = 'mainTitle'> Insurance Benefits </h2> \n\n                    <Row>\n                        <Col>\n                        <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n                            <Form.Label> Insurance Type </Form.Label>\n                            <Form.Select \n                                value={insuranceType}\n                                onChange={handleInsuranceType}>\n                                <option value=\"\"> Select Insurance Type </option>\n                                <option value=\"Health\" selected> Health </option>\n                                <option value=\"Home\"> Home </option>\n                                <option value=\"Auto\"> Auto </option>\n                            </Form.Select>\n                        </Form.Group>\n                        </Col>\n                        <Col>\n                        <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n                            <Form.Label>Insurance Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Insurance Name\"\n                                    onChange={(event) => {\n                                        setInsuranceName(event.target.value);\n                                    }} />\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formPlanName\">\n                                <Form.Label>Plan Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Plan Name\"\n                                    onChange={(event) => {\n                                        setPlanName(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formYearlyCost\">\n                                <Form.Label>Yearly Cost</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Yearly Cost\"\n                                    onChange={(event) => {\n                                        setYearlyCost(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formMaxAge\">\n                                <Form.Label>Max Age</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Max Age\"\n                                    onChange={(event) => {\n                                        setMaxAge(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </div>\n                {\n                formValues.map((element, index) => (\n                    // return (\n                        <Row>\n                            <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"coverageName\" >\n                                <Form.Control\n                                    type = \"text\"\n                                    name = \"coverageName\"\n                                    placeholder = \"Coverage Name\"\n                                    defaultValue = {element.coverageName || \"\"}\n                                    onChange = {e => handleChange(index, e)} />\n                            </Form.Group>\n                            </Col>\n                            <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"coverageAmount\" >\n                                <Form.Control\n                                    type = \"number\"\n                                    name = \"coverageAmount\"\n                                    placeholder = \"Coverage Amount\"\n                                    defaultValue = {element.coverageAmount || \"\"}\n                                    onChange = {e => handleChange(index, e)} />\n                            </Form.Group>\n                            </Col>\n                            <Col>\n                            {\n                                index ?\n                                    <Button variant=\"primary\" type=\"button\" onClick={() => removeFormFields(index)}>Remove</Button>\n                                : null\n                            }\n                            </Col>\n                        </Row>\n                    // );\n                ))\n                }\n                <Row>\n                <div>\n                <Button variant=\"secondary\" type=\"button\" onClick={() => addFormFields()}>Add More Coverages</Button>\n                {' '}\n                <Button variant=\"primary\" type=\"submit\"> Add Plan </Button>\n                </div>\n                </Row>\n            </Form>\n        </Container>\n    );\n\n}\n\nexport default AddBenefits;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}