{"ast":null,"code":"var _jsxFileName = \"/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Company/AddBenefits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Benefit from './Benefit';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport NavBar from '../Common/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddBenefits() {\n  _s();\n  const navigate = useNavigate();\n\n  // ----------- Start of states -----------\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [insuranceType, setInsuranceType] = useState('');\n  const [insuranceName, setInsuranceName] = useState('');\n  const [planName, setPlanName] = useState('');\n  const [yearlyCost, setYearlyCost] = useState('');\n  const [maxAge, setMaxAge] = useState('');\n  const [formValues, setFormValues] = useState([{\n    coverageName: \"\",\n    coverageAmount: \"\"\n  }]);\n  const [plans, setPlans] = useState([{\n    planName: \"\",\n    yearlyCost: \"\",\n    maxAge: \"\",\n    coverages: formValues\n  }]);\n  const [popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n\n  const handleFormSubmit = event => {\n    // setPlans([{planName: planName, yearlyCost: yearlyCost, maxAge: maxAge, coverages: formValues}])\n    event.preventDefault();\n    Axios.post(\"http://localhost:3001/insertInsurancePlan\", {\n      insuranceName: insuranceName,\n      insuranceType: insuranceType,\n      planName: planName,\n      yearlyCost: yearlyCost,\n      maxAge: maxAge,\n      coverageDetails: formValues,\n      plans: plans\n    }).then(function (response) {\n      console.log(\"Redirect msg inside AddInsurance.js = \" + response.data.redirect);\n      if (response.data.redirect === 'insurance_already_exists') {\n        setPopUp1(true);\n        // navigate(\"/Register\")\n      } else if (response.data.redirect === 'new_insurance_added_successfully') {\n        console.log(\"new_insurance_added_successfully\");\n        // navigate(\"/FrontPage_Company\")\n      }\n    });\n  };\n\n  const handleInsuranceType = event => {\n    console.log(event.target.value);\n    setInsuranceType(event.target.value);\n  };\n  const addFormFields = () => {\n    setFormValues([...formValues, {\n      coverageName: \"\",\n      coverageAmount: \"\"\n    }]);\n  };\n  const handleChange = (i, e) => {\n    const newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n  const removeFormFields = i => {\n    const newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  // ----------- End of functions -----------\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mainTitle\",\n          children: \" Insurance Benefits \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formInsuranceName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Insurance Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                onChange: handleInsuranceType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \" Select Insurance Type \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Health\",\n                  selected: true,\n                  children: \" Health \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Home\",\n                  children: \" Home \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Auto\",\n                  children: \" Auto \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formInsuranceName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Insurance Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Insurance Name\",\n                onChange: event => {\n                  setInsuranceName(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mainTitle\",\n            children: \" Add Plans \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formPlanName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Plan Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Plan Name\",\n                onChange: event => {\n                  setPlanName(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formYearlyCost\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Yearly Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Yearly Cost\",\n                onChange: event => {\n                  setYearlyCost(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formMaxAge\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Max Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Max Age\",\n                onChange: event => {\n                  setMaxAge(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), formValues.map((element, index) => Benefit(element, index, removeFormFields, handleChange)), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              type: \"button\",\n              onClick: () => addFormFields(),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), popUp1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Insurance already exists \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(AddBenefits, \"PEjEvPmyT64agrhuQwh61y6lQV0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddBenefits;\nexport default AddBenefits;\n// import React, { useState, useEffect } from 'react';\n// import Axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Benefit from './Benefit';\n// import Container from 'react-bootstrap/esm/Container';\n// import Row from 'react-bootstrap/esm/Row'\n// import Col from 'react-bootstrap/esm/Col'\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import NavBar from '../Common/NavBar';\n// import Alert from 'react-bootstrap/Alert';\n\n// function AddBenefits() {\n//     const navigate = useNavigate();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [insuranceType, setInsuranceType] = useState('');\n//     const [insuranceName, setInsuranceName] = useState('');\n//     const [planName, setPlanName] = useState('');\n//     const [yearlyCost, setYearlyCost] = useState('');\n//     const [maxAge, setMaxAge] = useState('');\n//     const [formValues, setFormValues] = useState([{ coverageName: \"\", coverageAmount: \"\" }])\n//     const [plans, setPlans] = useState([{ planName: \"\", yearlyCost: \"\", maxAge: \"\", coverages: formValues }])\n//     const [popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n\n//     const handleFormSubmit = (event) => {\n//         event.preventDefault();\n//         console.log(formValues)\n//         Axios.post(\"http://localhost:3001/insertInsurancePlan\", {\n//             insuranceName: insuranceName,\n//             insuranceType: insuranceType,\n//             planName: planName,\n//             yearlyCost: yearlyCost,\n//             maxAge: maxAge,\n//             coverageDetails: formValues,\n//             plans: plans\n//         })\n//         .then(function (response) {\n//             console.log(\"Redirect msg inside AddBenefits.js = \" + response.data.redirect)\n//             if (response.data.redirect === 'insurance_already_exists') {\n//                 setPopUp1(true)\n//                 // navigate(\"/Register\")\n//             } else if (response.data.redirect === 'new_insurance_added_successfully') {\n//                 console.log(\"new_insurance_added_successfully\")\n//                 // navigate(\"/FrontPage_Company\")\n//             }\n//         })\n//     }\n\n//     const handleInsuranceType = event => {\n//         console.log(event.target.value);\n//         setInsuranceType(event.target.value);\n//     }\n\n//     const addFormFields = () => {\n//         setFormValues([...formValues, { coverageName: \"\", coverageAmount: \"\" }])\n//     }\n\n//     const handleChange = (i, e) => {\n//         const newFormValues = [...formValues];\n//         newFormValues[i][e.target.name] = e.target.value;\n//         setFormValues(newFormValues);\n//     }\n\n//     const removeFormFields = (i) => {\n//         const newFormValues = [...formValues];\n//         newFormValues.splice(i, 1);\n//         setFormValues(newFormValues)\n//     }\n\n//     return (\n//         <Container>\n//             <Row>\n//                 <NavBar></NavBar>\n//             </Row>\n//             <br/>\n\n//             <Form onSubmit={handleFormSubmit}>\n//                 <div className=\"whiteBox\">\n//                     <h3 className='mainTitle'> Insurance Benefits </h3>\n\n//                     <Row>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n//                                 <Form.Label>Insurance Type</Form.Label>\n//                                 <Form.Select\n//                                     onChange={handleInsuranceType}>\n//                                     <option value=\"\"> Select Insurance Type </option>\n//                                     <option value=\"Health\" selected> Health </option>\n//                                     <option value=\"Home\"> Home </option>\n//                                     <option value=\"Auto\"> Auto </option>\n//                                 </Form.Select>\n//                             </Form.Group>\n//                         </Col>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n//                                 <Form.Label>Insurance Name</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     placeholder=\"Insurance Name\"\n//                                     onChange={(event) => {\n//                                         setInsuranceName(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n\n//                     <Row>\n//                         <h3 className='mainTitle'> Add Plans </h3>\n//                     </Row>\n\n//                     <Row>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formPlanName\">\n//                                 <Form.Label>Plan Name</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     placeholder=\"Plan Name\"\n//                                     onChange={(event) => {\n//                                         setPlanName(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formYearlyCost\">\n//                                 <Form.Label>Yearly Cost</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     placeholder=\"Yearly Cost\"\n//                                     onChange={(event) => {\n//                                         setYearlyCost(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formMaxAge\">\n//                                 <Form.Label>Max Age</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     placeholder=\"Max Age\"\n//                                     onChange={(event) => {\n//                                         setMaxAge(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n\n//                     {\n//                         formValues.map((element, index) => (\n//                             Benefit(element, index, removeFormFields, handleChange)\n//                         ))\n//                     }\n\n//                     <Row>\n//                         <div>\n//                         <Button variant=\"secondary\" type=\"button\" onClick={() => addFormFields()}>Add</Button>\n//                         {' '}\n//                         <Button variant=\"primary\" type=\"submit\">Submit</Button>\n//                         </div>\n//                     </Row>\n\n//                     {popUp1 && (\n//                         <Alert variant=\"danger\">\n//                             <p> Insurance already exists! Click here to add additional plans </p>\n//                         </Alert>\n//                     )}\n\n//                 </div>\n//             </Form>\n//         </Container>\n//     );\n\n// }\n\n// export default AddBenefits;\nvar _c;\n$RefreshReg$(_c, \"AddBenefits\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","Link","Benefit","Container","Row","Col","Button","Form","NavBar","AddBenefits","navigate","username","setUsername","password","setPassword","insuranceType","setInsuranceType","insuranceName","setInsuranceName","planName","setPlanName","yearlyCost","setYearlyCost","maxAge","setMaxAge","formValues","setFormValues","coverageName","coverageAmount","plans","setPlans","coverages","popUp1","setPopUp1","handleFormSubmit","event","preventDefault","post","coverageDetails","then","response","console","log","data","redirect","handleInsuranceType","target","value","addFormFields","handleChange","i","e","newFormValues","name","removeFormFields","splice","map","element","index"],"sources":["/Users/prachiti/Downloads/MaximizeBenefits-personal/client/src/Pages/Company/AddBenefits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Benefit from './Benefit';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row'\nimport Col from 'react-bootstrap/esm/Col'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport NavBar from '../Common/NavBar';\n\n\nfunction AddBenefits() {\n    const navigate = useNavigate();\n\n    // ----------- Start of states -----------\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [insuranceType, setInsuranceType] = useState('');\n    const [insuranceName, setInsuranceName] = useState('');\n    const [planName, setPlanName] = useState('');\n    const [yearlyCost, setYearlyCost] = useState('');\n    const [maxAge, setMaxAge] = useState('');\n    const [formValues, setFormValues] = useState([{ coverageName: \"\", coverageAmount: \"\" }])\n    const [plans, setPlans] = useState([{ planName: \"\", yearlyCost: \"\", maxAge: \"\", coverages: formValues }])\n    const [popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n\n    const handleFormSubmit = (event) => {\n        // setPlans([{planName: planName, yearlyCost: yearlyCost, maxAge: maxAge, coverages: formValues}])\n        event.preventDefault();\n\n        Axios.post(\"http://localhost:3001/insertInsurancePlan\", {\n            insuranceName: insuranceName,\n            insuranceType: insuranceType,\n            planName: planName,\n            yearlyCost: yearlyCost,\n            maxAge: maxAge,\n            coverageDetails: formValues,\n            plans: plans\n        })\n            .then(function (response) {\n                console.log(\"Redirect msg inside AddInsurance.js = \" + response.data.redirect)\n                if (response.data.redirect === 'insurance_already_exists') {\n                    setPopUp1(true)\n                    // navigate(\"/Register\")\n                } else if (response.data.redirect === 'new_insurance_added_successfully') {\n                    console.log(\"new_insurance_added_successfully\")\n                    // navigate(\"/FrontPage_Company\")\n                }\n            })\n    }\n\n    const handleInsuranceType = event => {\n        console.log(event.target.value);\n        setInsuranceType(event.target.value);\n    }\n\n    const addFormFields = () => {\n        setFormValues([...formValues, { coverageName: \"\", coverageAmount: \"\" }])\n    }\n\n    const handleChange = (i, e) => {\n        const newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n    }\n\n    const removeFormFields = (i) => {\n        const newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n\n\n\n    // ----------- End of functions -----------\n\n    return (\n        <Container>\n            <Row>\n                <NavBar></NavBar>\n            </Row>\n\n            <br />\n\n            <Form onSubmit={handleFormSubmit}>\n                <div className=\"whiteBox\">\n                    <h3 className='mainTitle'> Insurance Benefits </h3>\n\n                    <Row>\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n                                <Form.Label>Insurance Name</Form.Label>\n                                <Form.Select\n                                    onChange={handleInsuranceType}>\n                                    <option value=\"\"> Select Insurance Type </option>\n                                    <option value=\"Health\" selected> Health </option>\n                                    <option value=\"Home\"> Home </option>\n                                    <option value=\"Auto\"> Auto </option>\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n                                <Form.Label>Insurance Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Insurance Name\"\n                                    onChange={(event) => {\n                                        setInsuranceName(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n\n\n\n\n                    <Row>\n                        <h3 className='mainTitle'> Add Plans </h3>\n                    </Row>\n\n\n\n\n                    <Row>\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formPlanName\">\n                                <Form.Label>Plan Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Plan Name\"\n                                    onChange={(event) => {\n                                        setPlanName(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formYearlyCost\">\n                                <Form.Label>Yearly Cost</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Yearly Cost\"\n                                    onChange={(event) => {\n                                        setYearlyCost(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n\n                        <Col>\n                            <Form.Group className=\"mb-3\" controlId=\"formMaxAge\">\n                                <Form.Label>Max Age</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Max Age\"\n                                    onChange={(event) => {\n                                        setMaxAge(event.target.value);\n                                    }} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n\n                    {\n                        formValues.map((element, index) => (\n                            Benefit(element, index, removeFormFields, handleChange)\n                        ))\n                    }\n\n                    <Row>\n                        <div>\n                        <Button variant=\"secondary\" type=\"button\" onClick={() => addFormFields()}>Add</Button>\n                        {' '}\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                        </div>\n                    </Row>\n                    {popUp1 && (\n                        <p> Insurance already exists </p>\n                    )}\n\n                </div>\n            </Form>\n        </Container>\n    );\n\n}\n\nexport default AddBenefits;\n// import React, { useState, useEffect } from 'react';\n// import Axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n// import Benefit from './Benefit';\n// import Container from 'react-bootstrap/esm/Container';\n// import Row from 'react-bootstrap/esm/Row'\n// import Col from 'react-bootstrap/esm/Col'\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import NavBar from '../Common/NavBar';\n// import Alert from 'react-bootstrap/Alert';\n\n// function AddBenefits() {\n//     const navigate = useNavigate();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [insuranceType, setInsuranceType] = useState('');\n//     const [insuranceName, setInsuranceName] = useState('');\n//     const [planName, setPlanName] = useState('');\n//     const [yearlyCost, setYearlyCost] = useState('');\n//     const [maxAge, setMaxAge] = useState('');\n//     const [formValues, setFormValues] = useState([{ coverageName: \"\", coverageAmount: \"\" }])\n//     const [plans, setPlans] = useState([{ planName: \"\", yearlyCost: \"\", maxAge: \"\", coverages: formValues }])\n//     const [popUp1, setPopUp1] = useState(false); // Insurance already exists, can't create another\n\n//     const handleFormSubmit = (event) => {\n//         event.preventDefault();\n//         console.log(formValues)\n//         Axios.post(\"http://localhost:3001/insertInsurancePlan\", {\n//             insuranceName: insuranceName,\n//             insuranceType: insuranceType,\n//             planName: planName,\n//             yearlyCost: yearlyCost,\n//             maxAge: maxAge,\n//             coverageDetails: formValues,\n//             plans: plans\n//         })\n//         .then(function (response) {\n//             console.log(\"Redirect msg inside AddBenefits.js = \" + response.data.redirect)\n//             if (response.data.redirect === 'insurance_already_exists') {\n//                 setPopUp1(true)\n//                 // navigate(\"/Register\")\n//             } else if (response.data.redirect === 'new_insurance_added_successfully') {\n//                 console.log(\"new_insurance_added_successfully\")\n//                 // navigate(\"/FrontPage_Company\")\n//             }\n//         })\n//     }\n\n//     const handleInsuranceType = event => {\n//         console.log(event.target.value);\n//         setInsuranceType(event.target.value);\n//     }\n\n//     const addFormFields = () => {\n//         setFormValues([...formValues, { coverageName: \"\", coverageAmount: \"\" }])\n//     }\n\n//     const handleChange = (i, e) => {\n//         const newFormValues = [...formValues];\n//         newFormValues[i][e.target.name] = e.target.value;\n//         setFormValues(newFormValues);\n//     }\n\n//     const removeFormFields = (i) => {\n//         const newFormValues = [...formValues];\n//         newFormValues.splice(i, 1);\n//         setFormValues(newFormValues)\n//     }\n\n//     return (\n//         <Container>\n//             <Row>\n//                 <NavBar></NavBar>\n//             </Row>\n//             <br/>\n\n//             <Form onSubmit={handleFormSubmit}>\n//                 <div className=\"whiteBox\">\n//                     <h3 className='mainTitle'> Insurance Benefits </h3>\n\n//                     <Row>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n//                                 <Form.Label>Insurance Type</Form.Label>\n//                                 <Form.Select\n//                                     onChange={handleInsuranceType}>\n//                                     <option value=\"\"> Select Insurance Type </option>\n//                                     <option value=\"Health\" selected> Health </option>\n//                                     <option value=\"Home\"> Home </option>\n//                                     <option value=\"Auto\"> Auto </option>\n//                                 </Form.Select>\n//                             </Form.Group>\n//                         </Col>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formInsuranceName\">\n//                                 <Form.Label>Insurance Name</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     placeholder=\"Insurance Name\"\n//                                     onChange={(event) => {\n//                                         setInsuranceName(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n\n//                     <Row>\n//                         <h3 className='mainTitle'> Add Plans </h3>\n//                     </Row>\n                    \n//                     <Row>\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formPlanName\">\n//                                 <Form.Label>Plan Name</Form.Label>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     placeholder=\"Plan Name\"\n//                                     onChange={(event) => {\n//                                         setPlanName(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formYearlyCost\">\n//                                 <Form.Label>Yearly Cost</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     placeholder=\"Yearly Cost\"\n//                                     onChange={(event) => {\n//                                         setYearlyCost(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n\n//                         <Col>\n//                             <Form.Group className=\"mb-3\" controlId=\"formMaxAge\">\n//                                 <Form.Label>Max Age</Form.Label>\n//                                 <Form.Control\n//                                     type=\"number\"\n//                                     placeholder=\"Max Age\"\n//                                     onChange={(event) => {\n//                                         setMaxAge(event.target.value);\n//                                     }} />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n\n\n//                     {\n//                         formValues.map((element, index) => (\n//                             Benefit(element, index, removeFormFields, handleChange)\n//                         ))\n//                     }\n\n//                     <Row>\n//                         <div>\n//                         <Button variant=\"secondary\" type=\"button\" onClick={() => addFormFields()}>Add</Button>\n//                         {' '}\n//                         <Button variant=\"primary\" type=\"submit\">Submit</Button>\n//                         </div>\n//                     </Row>\n                    \n//                     {popUp1 && (\n//                         <Alert variant=\"danger\">\n//                             <p> Insurance already exists! Click here to add additional plans </p>\n//                         </Alert>\n//                     )}\n\n//                 </div>\n//             </Form>\n//         </Container>\n//     );\n\n// }\n\n// export default AddBenefits;"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}